{"version":3,"sources":["components/Header/Header.js","components/Body/Form/Form.js","components/Body/InfoDisplay/InfoDisplay.js","components/Body/Body.js","components/Footer/Footer.js","components/ErrorDisplay/ErrorDisplay.js","App.js","hooks/useApiData.js","constants.js","config.js","index.js"],"names":["Header","className","Form","setCountry","onSubmit","e","preventDefault","target","elements","country","value","type","name","InfoDisplay","data","map","d","i","countryName","parseInt","population","toLocaleString","capital","currency","continentName","areaInSqKm","Body","Footer","ErrorDisplay","error","message","onClick","console","log","App","useState","isLoading","setIsLoading","setError","setData","apiUrl","createUrlSearchParams","useEffect","getcountryData","a","fetch","res","ok","Error","status","json","geonames","length","dataArr","currencyCode","loading","useApiData","ReactDOM","render","document","getElementById"],"mappings":"iQAUeA,EARA,WACX,OACI,qBAAKC,UAAU,SAAf,SACI,mDCWGC,EAhBF,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WAOZ,OACI,uBAAMF,UAAU,OAAOG,SANN,SAACC,GAClBA,EAAEC,iBACFH,EAAWE,EAAEE,OAAOC,SAASC,QAAQC,QAIrC,UACI,oEACA,uBAAOC,KAAK,OAAOC,KAAK,YACxB,wBAAQD,KAAK,SAAb,kCCWGE,EAtBK,SAAC,GAEjB,OAF8B,EAAXC,KAGVC,KAAI,SAACC,EAAGC,GAAJ,OACL,sBAAKhB,UAAU,uBAAf,UACI,6BAAKe,EAAEE,cACP,6CACA,8BAAIC,SAASH,EAAEI,YAAYC,iBAA3B,aACA,0CACA,4BAAIL,EAAEM,UACN,2CACA,4BAAIN,EAAEO,WACN,4CACA,4BAAIP,EAAEQ,gBACN,4DACA,sCAAOR,EAAES,WAAT,WAXuCR,OCUxCS,G,MAVF,SAAC,GAA0B,IAAxBZ,EAAuB,EAAvBA,KAAMX,EAAiB,EAAjBA,WAElB,OACI,sBAAKF,UAAU,OAAf,UACI,cAAC,EAAD,CAAME,WAAYA,IAClB,cAAC,EAAD,CAAaW,KAAMA,SCDhBa,EARA,WACX,OACI,qBAAK1B,UAAU,YCaR2B,EAdM,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAIpB,OACI,sBAAK5B,UAAU,QAAf,UACI,iFACA,0IACA,4BAAI4B,EAAMC,UACV,wBAAQC,QAASC,QAAQC,IAAI,QAA7B,wB,gBCeGC,EAhBH,WAER,MAA8BC,mBAAS,MAAvC,mBAAO1B,EAAP,KAAgBN,EAAhB,KACA,ECHe,SAACM,GAChB,MAAkC0B,oBAAS,GAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAA0BF,mBAAS,MAAnC,mBAAON,EAAP,KAAcS,EAAd,KACA,EAAwBH,qBAAxB,mBAAOrB,EAAP,KAAayB,EAAb,KAEMC,EAToB,SAAC/B,GAC3B,MAAM,GAAN,OCJmB,+CDInB,mBAA4BA,GAA5B,OENoB,oBFcLgC,CAAsBhC,GAwCrC,OAtCAiC,qBAAU,WACN,IAAMC,EAAc,uCAAG,gCAAAC,EAAA,sEACDC,MAAML,GADL,UACbM,EADa,gBAIVA,EAAIC,GAJM,sBAKL,IAAIC,MAAJ,UAAaF,EAAIG,SALZ,uBAQIH,EAAII,OARR,QAQTpC,EARS,QAUNqC,SAASC,OAAS,GACvBd,EAAS,kCAGPe,EAAUvC,EAAKqC,SAASpC,KAAI,SAACC,GAQ/B,MAAO,CAAES,WAPUT,EAAES,WAOAH,QANLN,EAAEM,QAMYE,cALRR,EAAEQ,cAKqBN,YAJzBF,EAAEE,YAIoCK,SAHzCP,EAAEsC,aAGiDlC,WAFjDJ,EAAEI,eAKzBY,QAAQC,IAAInB,GACZyB,EAAQc,GACRhB,GAAa,GA3BE,kDA6BfC,EAAS,EAAD,IACRD,GAAa,GACbL,QAAQC,IAAR,MA/Be,0DAAH,qDAkCpBU,MACD,CAACH,IAEG,CACH1B,OACAyC,QAASnB,EACTP,SD7C6B2B,CAAW/C,GAApCK,EAAR,EAAQA,KAAMyC,EAAd,EAAcA,QAAS1B,EAAvB,EAAuBA,MAEvB,OACI,sBAAK5B,UAAU,YAAf,UACI,cAAC,EAAD,IACCsD,IAAY1B,GAAS,cAAC,IAAD,CAAa5B,UAAU,SAASsD,QAASA,IAC9D1B,GAAS,cAAC,EAAD,CAAcA,MAAOA,KAC7B0B,IAAY1B,GAAS,cAAC,EAAD,CAAMf,KAAMA,EAAMX,WAAYA,IACrD,cAAC,EAAD,Q,MIdZsD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.304bb5c7.chunk.js","sourcesContent":["import './styles.css';\n\nconst Header = () => {\n    return (\n        <div className=\"header\">\n            <h1>Country Lookup</h1>\n        </div>\n    )\n}\n\nexport default Header;","const Form = ({ setCountry }) => {\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        setCountry(e.target.elements.country.value);\n    }\n\n    return (\n        <form className=\"form\" onSubmit={handleSubmit}>\n            <h4>Enter a country (US, UK, CA, etc):</h4>\n            <input type=\"text\" name=\"country\" />\n            <button type=\"submit\">Search Countries</button>\n        </form>\n    )\n}\n\nexport default Form;","const InfoDisplay = ({ data }) => {\n\n    return (\n        data.map((d, i) => (\n            <div className=\"country-info-display\" key={i}>\n                <h2>{d.countryName}</h2>\n                <h4>Population:</h4>\n                <p>{parseInt(d.population).toLocaleString()} people</p>\n                <h4>Capital:</h4>\n                <p>{d.capital}</p>\n                <h4>Currency:</h4>\n                <p>{d.currency}</p>\n                <h4>Continent:</h4>\n                <p>{d.continentName}</p>\n                <h4>Area in square kilometers:</h4>\n                <p>{`${d.areaInSqKm} km`}</p>\n            </div>\n            \n        ))\n    )\n}\n\nexport default InfoDisplay;","import Form from './Form/Form';\nimport InfoDisplay from './InfoDisplay/InfoDisplay';\nimport './styles.css';\n\nconst Body = ({ data, setCountry }) => {\n\n    return (\n        <div className=\"body\">\n            <Form setCountry={setCountry} />\n            <InfoDisplay data={data} />\n        </div>\n    )\n}\n\nexport default Body;","const Footer = () => {\n    return (\n        <div className=\"footer\">\n        \n        </div>\n    )\n}\n\nexport default Footer;","\nconst ErrorDisplay = ({ error }) => {\n\n    \n\n    return (\n        <div className=\"error\">\n            <h2>There was an error retrieving this information.</h2>\n            <h5>Make sure to use the country ISO code and not the full name in the search! (US instead of United States)</h5>\n            <p>{error.message}</p>\n            <button onClick={console.log('test')}>Return</button>\n        </div>\n    )\n}\n\nexport default ErrorDisplay;","import { useApiData } from './hooks/useApiData';\nimport { useState } from 'react';\n\nimport Header from './components/Header/Header';\nimport Body from './components/Body/Body';\nimport Footer from './components/Footer/Footer';\nimport ErrorDisplay from './components/ErrorDisplay/ErrorDisplay';\nimport ScaleLoader from \"react-spinners/ScaleLoader\";\n\nconst App = () => {\n\n    const [country, setCountry] = useState('US');\n    const { data, loading, error } = useApiData(country);\n\n    return (\n        <div className=\"container\">\n            <Header />\n            {loading && !error && <ScaleLoader className=\"loader\" loading={loading} />}\n            {error && <ErrorDisplay error={error} />}\n            {!loading && !error && <Body data={data} setCountry={setCountry} />}\n            <Footer />\n        </div>\n    )\n}\n\nexport default App;","import { useState, useEffect } from 'react';\n\nimport { API_URL } from '../constants';\nimport { USERNAME } from '../constants';\n\nconst createUrlSearchParams = (country) => {\n    return `${API_URL}country=${country}${USERNAME}`;\n}\n\nconst useApiData = (country) => {\n    const [isLoading, setIsLoading] = useState(true);\n    const [error, setError] = useState(null);\n    const [data, setData] = useState();\n\n    const apiUrl = createUrlSearchParams(country);\n\n    useEffect(() => {\n        const getcountryData = async () => {\n            const res = await fetch(apiUrl);\n\n            try {\n                if (!res.ok) {\n                    throw new Error(`${res.status}`);\n                }\n\n                const data = await res.json();\n\n                if (data.geonames.length < 1) {\n                    setError('Error: No country by that name')\n                }\n\n                const dataArr = data.geonames.map((d) => {\n                    const areaInSqKm = d.areaInSqKm;\n                    const capital = d.capital;\n                    const continentName = d.continentName;\n                    const countryName = d.countryName;\n                    const currency = d.currencyCode;\n                    const population = d.population;\n\n                    return { areaInSqKm, capital, continentName, countryName, currency, population };\n                });\n\n                console.log(data);\n                setData(dataArr);\n                setIsLoading(false);\n            } catch (err) {\n                setError(err);\n                setIsLoading(false);\n                console.log(err);\n            }\n        }\n        getcountryData();\n    }, [apiUrl])\n    \n    return {\n        data,\n        loading: isLoading,\n        error,\n    }\n}\n\nexport { useApiData };","import { userName } from './config';\n\nexport const API_URL = 'https://secure.geonames.org/countryInfoJSON?';\n\nexport const USERNAME = userName;","export const userName = '&username=sg55kg';","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport './styles.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}